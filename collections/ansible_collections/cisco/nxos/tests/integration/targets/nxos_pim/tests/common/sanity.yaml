- debug: msg="START connection={{ ansible_connection }} nxos_pim sanity test"
- debug: msg="Using provider={{ connection.transport }}"
  when: ansible_connection == "local"
- name: 'Setup: Disable features'
  ignore_errors: true
  loop:
  - pim
  - bfd
  cisco.nxos.nxos_feature:
    feature: '{{ item }}'
    provider: '{{ connection }}'
    state: disabled
- name: 'Setup: Enable features'
  loop:
  - pim
  - bfd
  cisco.nxos.nxos_feature:
    feature: '{{ item }}'
    provider: '{{ connection }}'
    state: enabled
- name: 'Setup: Configure ssm_range none'
  cisco.nxos.nxos_pim: &id005
    ssm_range: none
    provider: '{{ connection }}'
- block:
  - name: Initial config from none
    register: result
    cisco.nxos.nxos_pim: &id001
      bfd: enable
      ssm_range:
      - 239.128.1.0/24
      - 224.0.0.0/8
      provider: '{{ connection }}'
  - assert: &id002
      that:
      - result.changed == true
  - name: Initial config idempotence
    register: result
    cisco.nxos.nxos_pim: *id001
  - assert: &id004
      that:
      - result.changed == false
  - name: Configure ssm_range default
    register: result
    cisco.nxos.nxos_pim: &id003
      bfd: disable
      ssm_range: default
      provider: '{{ connection }}'
  - assert: *id002
  - name: ssm_range default idempotence
    register: result
    cisco.nxos.nxos_pim: *id003
  - assert: *id004
  - name: Configure ssm_range none
    register: result
    cisco.nxos.nxos_pim: *id005
  - assert: *id002
  - meta: end_play
  - name: ssm_range none idempotence
    register: result
    cisco.nxos.nxos_pim: *id005
  - assert: *id004
  always:
  - name: 'Teardown: Disable features'
    ignore_errors: true
    loop:
    - pim
    - bfd
    cisco.nxos.nxos_feature:
      feature: '{{ item }}'
      provider: '{{ connection }}'
      state: disabled
- debug: msg="END connection={{ ansible_connection }} nxos_pim sanity test"
