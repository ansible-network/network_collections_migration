- debug: msg="START connection={{ ansible_connection }} nxos_ospf_vrf sanity test"
- debug: msg="Using provider={{ connection.transport }}"
  when: ansible_connection == "local"
- set_fact: def_met_default="default"
  when: imagetag is not search("I7")
- name: 'Setup: disable features for initial cleanup'
  loop:
  - ospf
  - bfd
  ignore_errors: true
  cisco.nxos.nxos_feature:
    feature: '{{ item }}'
    provider: '{{ connection }}'
    state: disabled
- name: Enable features
  loop:
  - ospf
  - bfd
  cisco.nxos.nxos_feature:
    feature: '{{ item }}'
    provider: '{{ connection }}'
    state: enabled
- block:
  - name: Configure ospf vrf
    register: result
    cisco.nxos.nxos_ospf_vrf: &id001
      ospf: 1
      router_id: 192.0.2.1
      timer_throttle_spf_start: 50
      timer_throttle_spf_hold: 1000
      timer_throttle_spf_max: 2000
      timer_throttle_lsa_start: 60
      timer_throttle_lsa_hold: 1100
      timer_throttle_lsa_max: 3000
      vrf: test
      bfd: enable
      passive_interface: true
      provider: '{{ connection }}'
      state: present
  - assert: &id002
      that:
      - result.changed == true
  - name: Check Idempotence
    register: result
    cisco.nxos.nxos_ospf_vrf: *id001
  - assert: &id004
      that:
      - result.changed == false
  - name: Configure ospf vrf
    register: result
    cisco.nxos.nxos_ospf_vrf: &id003
      ospf: 2
      auto_cost: 5000
      timer_throttle_spf_hold: 1100
      timer_throttle_lsa_hold: 2220
      timer_throttle_lsa_max: 2222
      default_metric: 1000
      log_adjacency: log
      vrf: default
      bfd: disable
      passive_interface: true
      provider: '{{ connection }}'
      state: present
  - assert: *id002
  - name: Check Idempotence
    register: result
    cisco.nxos.nxos_ospf_vrf: *id003
  - assert: *id004
  - name: Configure ospf vrf
    register: result
    cisco.nxos.nxos_ospf_vrf: &id005
      ospf: 2
      auto_cost: default
      default_metric: '{{def_met_default|default(omit)}}'
      log_adjacency: default
      timer_throttle_spf_hold: default
      passive_interface: false
      vrf: default
      provider: '{{ connection }}'
      state: present
  - assert: *id002
  - name: Check Idempotence
    register: result
    cisco.nxos.nxos_ospf_vrf: *id005
  - assert: *id004
  - name: Unconfigure ospf vrf
    register: result
    cisco.nxos.nxos_ospf_vrf: &id006
      ospf: 2
      vrf: default
      provider: '{{ connection }}'
      state: absent
  - assert: *id002
  - name: Check Idempotence
    register: result
    cisco.nxos.nxos_ospf_vrf: *id006
  - assert: *id004
    when: def_met_default is defined
  - name: Unconfigure ospf vrf
    register: result
    cisco.nxos.nxos_ospf_vrf: &id007
      ospf: 1
      vrf: test
      provider: '{{ connection }}'
      state: absent
  - assert: *id002
  - name: Check Idempotence
    register: result
    cisco.nxos.nxos_ospf_vrf: *id007
  - assert: *id004
    when: def_met_default is defined
  always:
  - name: Disable features
    loop:
    - ospf
    - bfd
    ignore_errors: true
    cisco.nxos.nxos_feature:
      feature: '{{ item }}'
      provider: '{{ connection }}'
      state: disabled
- debug: msg="END connection={{ ansible_connection }} nxos_ospf_vrf sanity test"
