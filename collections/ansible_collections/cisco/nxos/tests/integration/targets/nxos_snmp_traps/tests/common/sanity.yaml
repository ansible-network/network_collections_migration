- debug: msg="START connection={{ ansible_connection }} nxos_snmp_traps sanity test"
- debug: msg="Using provider={{ connection.transport }}"
  when: ansible_connection == "local"
- name: Setup - Remove snmp_traps if configured
  cisco.nxos.nxos_snmp_traps: &id006
    group: all
    provider: '{{ connection }}'
    state: disabled
- block:
  - name: Configure one snmp trap group
    register: result
    cisco.nxos.nxos_snmp_traps: &id001
      group: bridge
      provider: '{{ connection }}'
      state: enabled
  - assert: &id002
      that:
      - result.changed == true
  - name: Idempotence Check
    register: result
    cisco.nxos.nxos_snmp_traps: *id001
  - assert: &id004
      that:
      - result.changed == false
  - name: Remove snmp trap group
    register: result
    cisco.nxos.nxos_snmp_traps: &id003
      group: bridge
      provider: '{{ connection }}'
      state: disabled
  - assert: *id002
  - name: Idempotence Check
    register: result
    cisco.nxos.nxos_snmp_traps: *id003
  - assert: *id004
  - name: Configure all snmp trap groups
    register: result
    cisco.nxos.nxos_snmp_traps: &id005
      group: all
      provider: '{{ connection }}'
      state: enabled
  - assert: *id002
  - block:
    - name: Idempotence Check
      register: result
      cisco.nxos.nxos_snmp_traps: *id005
    - assert: *id004
    when: imagetag is not search("I2|I7|D1")
  - name: Cleanup
    register: result
    cisco.nxos.nxos_snmp_traps: *id006
  - assert: *id002
  - name: Cleanup Idempotence
    register: result
    cisco.nxos.nxos_snmp_traps: *id006
  - assert: *id004
  always:
  - name: Cleanup
    cisco.nxos.nxos_snmp_traps: *id006
  - debug: msg="END connection={{ ansible_connection }} nxos_snmp_traps sanity test"
